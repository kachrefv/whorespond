import { NextResponse } from 'next/server';import bcrypt from 'bcrypt';import prisma from '@/lib/prisma';export async function POST(request: Request) {  try {    const { name, email, password } = await request.json();    if (!name || !email || !password) {      return new NextResponse('Missing fields', { status: 400 });    }    const existingUser = await prisma.user.findUnique({      where: { email },    });    if (existingUser) {      return new NextResponse('User with this email already exists', { status: 409 });    }    const hashedPassword = await bcrypt.hash(password, 10);    const user = await prisma.user.create({      data: {        name,        email,        hashedPassword,      },    });    return NextResponse.json({ message: 'User registered successfully', user: { id: user.id, email: user.email, name: user.name } }, { status: 201 });  } catch (error) {    console.error('Registration error:', error);    return new NextResponse('Internal Server Error', { status: 500 });  }}